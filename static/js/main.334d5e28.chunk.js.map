{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","breakTm","setBreakTm","sessionTm","setSessionTm","timer","setTimer","startStop","setStartStop","flag","setFlag","timeFormat","time","minutes","Math","floor","seconds","minuteConvert","minAdjust","useEffect","audio","document","getElementById","currentTime","play","playDoneSound","setTimeout","interval","setInterval","prev","clearInterval","Provider","value","size","className","id","onClick","style","fontSize","src","pause","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.334d5e28.chunk.js","sourcesContent":["import { ImArrowUp, ImArrowDown, ImPlay3, ImPause2 } from \"react-icons/im\";\nimport { BiReset } from \"react-icons/bi\";\nimport { IconContext } from \"react-icons/lib\";\nimport { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [breakTm, setBreakTm] = useState(5 * 60);\n  const [sessionTm, setSessionTm] = useState(25 * 60);\n  const [timer, setTimer] = useState(() => 25 * 60);\n  const [startStop, setStartStop] = useState(false);\n  const [flag, setFlag] = useState(\"Session\");\n\n  const playDoneSound = () => {\n    var audio = document.getElementById(\"beep\");\n    audio.currentTime = 0;\n    audio.play();\n  };\n\n  const handleBreakUp = () => {\n    if (!startStop) {\n      setBreakTm((prev) => (prev + 60 <= 60 * 60 ? prev + 60 : prev));\n    }\n  };\n\n  const handleBreakDown = () => {\n    if (!startStop) {\n      setBreakTm((prev) => (prev - 60 >= 60 ? prev - 60 : prev));\n    }\n  };\n\n  const handleSessionUp = () => {\n    if (!startStop) {\n      setSessionTm((prev) => (prev + 60 <= 60 * 60 ? prev + 60 : prev));\n      setTimer((prev) => (prev + 60 <= 60 * 60 ? sessionTm + 60 : prev));\n    }\n  };\n\n  const handleSessionDown = () => {\n    if (!startStop) {\n      setSessionTm((prev) => (prev - 60 >= 60 ? prev - 60 : prev));\n      setTimer((prev) => (prev - 60 >= 60 ? sessionTm - 60 : prev));\n    }\n  };\n\n  const handleReset = () => {\n    var audio = document.getElementById(\"beep\");\n    setStartStop(() => false);\n    audio.pause();\n    audio.currentTime = 0;\n    setBreakTm(() => 5 * 60);\n    setSessionTm(() => 25 * 60);\n    setTimer(() => 25 * 60);\n    setFlag(() => \"Session\");\n  };\n\n  const timeFormat = (time) => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time - minutes * 60;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n    // //used for testing code against FCC test suite\n    // let checkit = minutes + \":\" + seconds;\n    // const timerRe = new RegExp(/^(\\d{2,4})[\\.:,\\/](\\d{2})$/);\n    // console.log(timerRe.test(checkit) + \" and \" + checkit);\n\n    return minutes + \":\" + seconds;\n  };\n\n  const minuteConvert = (minAdjust) => {\n    return Math.floor(minAdjust / 60);\n  };\n\n  //test timer type when clock hits ZERO, then switches timer\n  //session to break, break to session, changes title name of timer\n  const ZeroTest = () => {\n    if (flag === \"Session\") {\n      setFlag(\"Break\");\n      setTimer(breakTm);\n    } else {\n      setFlag(\"Session\");\n      setTimer(sessionTm);\n    }\n  };\n\n  //used to post the Zero time for 1 second and test for zero\n  useEffect(() => {\n    if (timeFormat(timer) === \"00:00\") {\n      playDoneSound();\n      setTimeout(() => {\n        ZeroTest();\n      }, 1000);\n    }\n  }, [timer]);\n\n  //beating heart of the countdown timer\n  //the useEffect is used as the on/off switch for the timer\n  useEffect(() => {\n    let interval = null;\n\n    if (startStop) {\n      interval = setInterval(() => {\n        setTimer((prev) => (prev - 1 >= 0 ? prev - 1 : prev));\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [startStop]);\n\n  return (\n    <IconContext.Provider value={{ size: \"2.5em\" }}>\n      <div className='App'>\n        <div className='container-wrapper'>\n          <h1>Pomodoro by Pauletto</h1>\n          <div className='row top'>\n            <div className='break-box'>\n              <div className='column'>\n                <h2 id='break-label'>Break Length</h2>\n\n                <button\n                  className='btn-more'\n                  id='break-increment'\n                  onClick={handleBreakUp}>\n                  <ImArrowUp />\n                </button>\n                <p className='adjusters' id='break-length'>\n                  {minuteConvert(breakTm)}\n                </p>\n                <span style={{ fontSize: \"1em\" }}>minutes</span>\n                <button\n                  className='btn-less'\n                  id='break-decrement'\n                  onClick={handleBreakDown}>\n                  <ImArrowDown />\n                </button>\n              </div>\n            </div>\n            <div className='session-box'>\n              <div className='column'>\n                <h2 id='session-label'>Session Length</h2>\n\n                <button\n                  className='btn-more'\n                  id='session-increment'\n                  onClick={handleSessionUp}>\n                  <ImArrowUp />\n                </button>\n                <p className='adjusters' id='session-length'>\n                  {minuteConvert(sessionTm)}\n                </p>\n                <span style={{ fontSize: \"1em\" }}>minutes</span>\n                <button\n                  className='btn-less'\n                  id='session-decrement'\n                  onClick={handleSessionDown}>\n                  <ImArrowDown />\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className='timer-box'>\n            <h2 id='timer-label'>{flag}</h2>\n            <p id='time-left'>{timeFormat(timer)}</p>\n            <audio src='../audioclips/audiomass-output.mp3' id='beep'></audio>\n            <div className='row'>\n              <button\n                id='start_stop'\n                onClick={() => setStartStop((prev) => !prev)}>\n                {startStop ? <ImPause2 /> : <ImPlay3 />}\n              </button>\n              <button id='reset' onClick={handleReset}>\n                <BiReset />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </IconContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}